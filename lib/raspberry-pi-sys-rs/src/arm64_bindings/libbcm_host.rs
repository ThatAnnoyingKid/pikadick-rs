/* automatically generated by rust-bindgen 0.59.2 */

pub const BCM_HOST_BOARD_TYPE_MODELA: u32 = 0;
pub const BCM_HOST_BOARD_TYPE_MODELB: u32 = 1;
pub const BCM_HOST_BOARD_TYPE_MODELAPLUS: u32 = 2;
pub const BCM_HOST_BOARD_TYPE_MODELBPLUS: u32 = 3;
pub const BCM_HOST_BOARD_TYPE_PI2MODELB: u32 = 4;
pub const BCM_HOST_BOARD_TYPE_ALPHA: u32 = 5;
pub const BCM_HOST_BOARD_TYPE_CM: u32 = 6;
pub const BCM_HOST_BOARD_TYPE_CM2: u32 = 7;
pub const BCM_HOST_BOARD_TYPE_PI3MODELB: u32 = 8;
pub const BCM_HOST_BOARD_TYPE_PI0: u32 = 9;
pub const BCM_HOST_BOARD_TYPE_CM3: u32 = 10;
pub const BCM_HOST_BOARD_TYPE_CUSTOM: u32 = 11;
pub const BCM_HOST_BOARD_TYPE_PI0W: u32 = 12;
pub const BCM_HOST_BOARD_TYPE_PI3MODELBPLUS: u32 = 13;
pub const BCM_HOST_BOARD_TYPE_PI3MODELAPLUS: u32 = 14;
pub const BCM_HOST_BOARD_TYPE_FPGA: u32 = 15;
pub const BCM_HOST_BOARD_TYPE_CM3PLUS: u32 = 16;
pub const BCM_HOST_BOARD_TYPE_PI4MODELB: u32 = 17;
pub const BCM_HOST_BOARD_TYPE_PI400: u32 = 19;
pub const BCM_HOST_BOARD_TYPE_CM4: u32 = 20;
pub const BCM_HOST_PROCESSOR_BCM2835: u32 = 0;
pub const BCM_HOST_PROCESSOR_BCM2836: u32 = 1;
pub const BCM_HOST_PROCESSOR_BCM2837: u32 = 2;
pub const BCM_HOST_PROCESSOR_BCM2838: u32 = 3;
pub const BCM_HOST_PROCESSOR_BCM2711: u32 = 3;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
extern crate libloading;
pub struct libbcm_host {
    __library: ::libloading::Library,
    pub bcm_host_init: unsafe extern "C" fn(),
    pub bcm_host_deinit: unsafe extern "C" fn(),
    pub graphics_get_display_size:
        unsafe extern "C" fn(display_number: u16, width: *mut u32, height: *mut u32) -> i32,
    pub bcm_host_get_peripheral_address: unsafe extern "C" fn() -> ::std::os::raw::c_uint,
    pub bcm_host_get_peripheral_size: unsafe extern "C" fn() -> ::std::os::raw::c_uint,
    pub bcm_host_get_sdram_address: unsafe extern "C" fn() -> ::std::os::raw::c_uint,
    pub bcm_host_get_model_type: unsafe extern "C" fn() -> ::std::os::raw::c_int,
    pub bcm_host_is_model_pi4: unsafe extern "C" fn() -> ::std::os::raw::c_int,
    pub bcm_host_is_fkms_active: unsafe extern "C" fn() -> ::std::os::raw::c_int,
    pub bcm_host_is_kms_active: unsafe extern "C" fn() -> ::std::os::raw::c_int,
    pub bcm_host_get_processor_id: unsafe extern "C" fn() -> ::std::os::raw::c_int,
}
impl libbcm_host {
    pub unsafe fn new<P>(path: P) -> Result<Self, ::libloading::Error>
    where
        P: AsRef<::std::ffi::OsStr>,
    {
        let library = ::libloading::Library::new(path)?;
        Self::from_library(library)
    }
    pub unsafe fn from_library<L>(library: L) -> Result<Self, ::libloading::Error>
    where
        L: Into<::libloading::Library>,
    {
        let __library = library.into();
        let bcm_host_init = __library.get(b"bcm_host_init\0").map(|sym| *sym)?;
        let bcm_host_deinit = __library.get(b"bcm_host_deinit\0").map(|sym| *sym)?;
        let graphics_get_display_size = __library
            .get(b"graphics_get_display_size\0")
            .map(|sym| *sym)?;
        let bcm_host_get_peripheral_address = __library
            .get(b"bcm_host_get_peripheral_address\0")
            .map(|sym| *sym)?;
        let bcm_host_get_peripheral_size = __library
            .get(b"bcm_host_get_peripheral_size\0")
            .map(|sym| *sym)?;
        let bcm_host_get_sdram_address = __library
            .get(b"bcm_host_get_sdram_address\0")
            .map(|sym| *sym)?;
        let bcm_host_get_model_type = __library
            .get(b"bcm_host_get_model_type\0")
            .map(|sym| *sym)?;
        let bcm_host_is_model_pi4 = __library.get(b"bcm_host_is_model_pi4\0").map(|sym| *sym)?;
        let bcm_host_is_fkms_active = __library
            .get(b"bcm_host_is_fkms_active\0")
            .map(|sym| *sym)?;
        let bcm_host_is_kms_active = __library.get(b"bcm_host_is_kms_active\0").map(|sym| *sym)?;
        let bcm_host_get_processor_id = __library
            .get(b"bcm_host_get_processor_id\0")
            .map(|sym| *sym)?;
        Ok(libbcm_host {
            __library,
            bcm_host_init,
            bcm_host_deinit,
            graphics_get_display_size,
            bcm_host_get_peripheral_address,
            bcm_host_get_peripheral_size,
            bcm_host_get_sdram_address,
            bcm_host_get_model_type,
            bcm_host_is_model_pi4,
            bcm_host_is_fkms_active,
            bcm_host_is_kms_active,
            bcm_host_get_processor_id,
        })
    }
    pub unsafe fn bcm_host_init(&self) -> () {
        (self.bcm_host_init)()
    }
    pub unsafe fn bcm_host_deinit(&self) -> () {
        (self.bcm_host_deinit)()
    }
    pub unsafe fn graphics_get_display_size(
        &self,
        display_number: u16,
        width: *mut u32,
        height: *mut u32,
    ) -> i32 {
        (self.graphics_get_display_size)(display_number, width, height)
    }
    pub unsafe fn bcm_host_get_peripheral_address(&self) -> ::std::os::raw::c_uint {
        (self.bcm_host_get_peripheral_address)()
    }
    pub unsafe fn bcm_host_get_peripheral_size(&self) -> ::std::os::raw::c_uint {
        (self.bcm_host_get_peripheral_size)()
    }
    pub unsafe fn bcm_host_get_sdram_address(&self) -> ::std::os::raw::c_uint {
        (self.bcm_host_get_sdram_address)()
    }
    pub unsafe fn bcm_host_get_model_type(&self) -> ::std::os::raw::c_int {
        (self.bcm_host_get_model_type)()
    }
    pub unsafe fn bcm_host_is_model_pi4(&self) -> ::std::os::raw::c_int {
        (self.bcm_host_is_model_pi4)()
    }
    pub unsafe fn bcm_host_is_fkms_active(&self) -> ::std::os::raw::c_int {
        (self.bcm_host_is_fkms_active)()
    }
    pub unsafe fn bcm_host_is_kms_active(&self) -> ::std::os::raw::c_int {
        (self.bcm_host_is_kms_active)()
    }
    pub unsafe fn bcm_host_get_processor_id(&self) -> ::std::os::raw::c_int {
        (self.bcm_host_get_processor_id)()
    }
}
