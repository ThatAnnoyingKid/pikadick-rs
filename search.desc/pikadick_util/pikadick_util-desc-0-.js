searchState.loadedDescShard("pikadick_util", 0, "An async <code>LockFile</code>.\nA type to prevent two async requests from racing the same …\nOpen a file for locking in a blocking manner\nUnlock the file in a blocking manner\nReturns the argument unchanged.\nReturns the argument unchanged.\nLock the key if it is missing, or run a future to fetch …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLock the file\nLock the file, writing the PID to it\nMake a new <code>RequestMap</code>.\nOpen a file for locking\nReturns <code>true</code> if this owns the lock\nTry to lock the file, returning <code>true</code> if successful.\nTry to lock a file with a pid, returning <code>true</code> if …\nTry to lock a file with a pid, returning <code>true</code> if …\nUnlock the file")