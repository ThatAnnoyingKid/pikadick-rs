searchState.loadedDescShard("rule34", 0, "The tag represents the author of the post (the creator of …\nActive, the default state.\nThe tag represents a character in the post.\nThe tag rperesents the copyright holder of characters in …\nA Rule34 Client\nDeleted, the post has been deleted and metadata will soon …\nA list of deleted images\nCrate Error Type\nExplicit\nFlagged, the post is has been flagged for review by a …\nThe tag represents a generic tag.\nInvalid json\nInvalid URL Error\nThe limit was too large\nThe tag represents some form of metadata, like the year …\nMissing auth\nA list of notes for posts\nA query builder to get notes.\nThe maximum number of responses per post list request\nPending, probably waiting for moderator approval.\nA Post\nA list of posts\nA builder for post list api queries\nA Post Status\nQuestionable\nA post rating\nReqwest HTTP Error\nSafe\nA helper to build a search query.\nThe maximum number of responses per tags list request.\nA Tag\nThe tag kind\nA list of tags\nA query builder to get tags\nA tokio task failed to join\nA parsed URL record.\nXML deserialization error\nAdd a tag.\nCall <code>SearchQueryBuilder::add_tag</code> on each element of the …\n?\nGet this as a char\nReturn the serialization of this URL.\nGet this as a &amp;str\nReturn the authority of this URL as an ASCII string.\nThe note body\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nThe time of the last change.\nThe inner http client.\nThe # of posts.\nThe # of posts with this tag.\nThe time of the creation.\nThe creation date of the post.\nThe creator\nThe creator id.\nSerialize with Serde using the internal representation of …\nIf this URL has a host and it is a domain name (not an IP …\nExecute the query\nExecute the api query and get the results.\nExecute the query\nThe main file url\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nGet the html post url for this post.\nGet the url for this query.\nGet the api url.\nGet the url for this query.\nReturn whether the URL has an ‘authority’, which can …\nWhether this has children.\nWhether this post has comments.\nEquivalent to <code>url.host().is_some()</code>.\nWhether the post has notes.\nThe height\nThe height of the original file.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nSet the post id\nSet the tag id\nThe post id.\nThe id\nThe id of the note.\nThe id the post\nThe tag id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a usable query string.\nReturn the serialization of this URL.\n?\nReturns true if this tag kind is an author.\nReturns true if this tag kind is a character.\nRetruns true if this tag is a copyright.\nReturns true if this tag kind is general.\nReturns true if this tag kind is a metadata.\nReturn whether the URL is special (has a special scheme)\nReturns true if the tag kind is unknown.\nIter over the tags in this object.\nParse a string as an URL, with this URL as the base URL.\nThe tag list kind?\nThe tag kind.\nSet the post limit.\nSet the limit.\nThe limit.\nThe max number of tags to return.\nGet a list of deleted images.\nGet a builder to list notes.\nCreate a builder to list posts from rule34.\nGet a builder to list tags.\nCreates a relative URL if possible, with this URL as the …\nThe md5 hash of the file.\nThe tag name to look up\nThe tag name to look up\nThe tag name.\nThe name pattern to look up using a SQL LIKE clause.\nThe name pattern to look up using a SQL LIKE clause.\nMake a new <code>NotesListQueryBuilder</code>\nMake a new <code>PostListQueryBuilder</code>.\nMake a new [<code>TagsListQueryBuilder</code>]\nMake a new <code>Client</code>.\nMake a new <code>SearchQueryBuilder</code>.\nThe list of notes\nThe current offset\nReturn a default <code>ParseOptions</code> that can fully configure the …\nThe field to order results by.\nThe field to order results by.\nReturn the origin of this URL (…\nThe parent post id\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nSet the page number\nSet the page id\nThe page #\nThe page id\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nSet the post id to get notes for.\nThe post id to get notes for.\nA list of deleted posts\nThe posts\nThe preview image height.\nThe preview url\nThe preview image width.\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nThe image rating\nThe sample height\nThe sample url\nThe sample width\nReturn the scheme of this URL, lower-cased, as an ASCII …\nThe number of up-votes minus the number of down-votes.\nSerialize with Serde using the internal representation of …\nSet the authentication.\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nThe original source.\nThe status of the post.\nSet the tags to list for.\nThe tags.\nA list of tag names.\nThe list of tags\nTake the built query string out.\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe time of the last update.\nReturn the username for this URL (typically the empty …\nThe version of the note.\nThe width\nimage width\nThe x position.\nThe y position")