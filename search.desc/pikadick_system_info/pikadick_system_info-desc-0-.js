searchState.loadedDescShard("pikadick_system_info", 0, "<code>aarch64</code>: ARMv8 64-bit architecture\n<code>amdgpu</code>\n<code>target_arch</code>: Target CPU architecture\n<code>arm</code>: 32-bit ARM architecture\n<code>arm64ec</code>\n<code>avr</code>\n<code>bpf</code>\nA context for caching data related to information queries.\n<code>csky</code>\nThe library error type\n<code>hexagon</code>\nInvalid UTF16 string\nInvalid Utf8 OsStr\nInvalid UTF8 string\nAn io error occured\n<code>loongarch32</code>\n<code>loongarch64</code>\n<code>m68k</code>\n<code>mips</code>: 32-bit MIPS CPU architecture\n<code>mips32r6</code>\n<code>mips64</code>: 64-bit MIPS CPU architecture\n<code>mips64r6</code>\nThe value is missing for some reason\n<code>msp430</code>: 16-bit MSP430 microcontrollers\n<code>nvptx64</code>: 64-bit NVIDIA PTX\n<code>powerpc</code>: 32-bit POWERPC platform\n<code>powerpc64</code>: 64-bit POWERPC platform\n<code>riscv32</code>\n<code>riscv64</code>\n<code>s390x</code>: 64-bit IBM z/Architecture\n<code>sparc</code>: 32-bit SPARC CPU architecture\n<code>sparc64</code>: 64-bit SPARC CPU architecture\n<code>wasm32</code>: Web Assembly (32-bit)\n<code>wasm64</code>\n<code>x86</code>: Generic x86 CPU architecture\n<code>x86_64</code>: ‘AMD64’ CPU architecture\n<code>xtensa</code>\nString representing this <code>Arch</code> which matches …\nGet the number of logical cpu cores.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Arch</code> from the given string\nGet the arch.\nGet the available amount of memory in the computer, in …\nGet the available amount of swap in the computer, in bytes.\nGet the boot time.\nGet the hostname.\nGet the system name, or the name of the operating system.\nGet the operating system version.\nGet the total amount of memory in the computer, in bytes.\nGet the total amount of swap in the computer, in bytes.\nGet the computer uptime.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake a new <code>CacheContext</code>.")