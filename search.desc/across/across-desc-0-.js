searchState.loadedDescShard("across", 0, "The config file\nA builder for cross compile commands\nBuild a command to execute which will perform the cross …\nSet the cargo build wrapper\nThe cargo build wrapper\nAdd a single env var\nEnvironment Variables\nThis is some if the builder errored.\nSet the build features\nBuild features\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the linker\nThe linker\nThe entry point\nA cross compile command\nSet the profile\nThe profile\nThe real entry point\nSet the target\nThe target triple\nThe targets for which config is provided.\nSet the very verbose flag\nWhether to set the very verbose flag\nThe config file\nA target in the config\nThe contents of s cmake toolchain file\nEnv vars set for this target.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe linker exe name. Example: “arm-linux-gnueabihf-gcc”\nLoad a config from a path\nThe targets for which config is provided.")