[package]
name = "pikadick"
version = "0.0.0"
edition = "2021"
license = "MIT OR Apache-2.0"

[dependencies]
anyhow = "1.0.53"
async-rusqlite = { path = "./lib/async-rusqlite-rs", features = [ "bundled" ] }
bincode = "1.3.3"
chrono = "0.4.19"
crossbeam = "0.8.1"
dashmap = "4.0.2"
deviantart = { path = "./lib/deviantart-rs" }
fml = { path = "./lib/fml-rs" }
heim = { version = "0.1.0-rc.1", features = [ "host", "cpu", "virt", "memory" ] }
indexmap = "1.7.0"
insta = { path = "./lib/insta-rs" }
iqdb = { path = "./lib/iqdb-rs" }
itoa = "1.0.1"
lazy_static = "1.4.0"
nekos = { path = "./lib/nekos-rs" }
once_cell = "1.9.0"
opentelemetry = { version = "0.16.0", features = [ "rt-tokio" ] }
opentelemetry-otlp = { version = "0.9.0", features = [ "tls", "tls-roots" ] }
parking_lot = "0.11.2"
quizizz = { path = "./lib/quizizz-rs" }
r6stats = { path = "./lib/r6stats-rs" }
r6tracker = { path = "./lib/r6tracker-rs" }
rand = "0.8.4"
reddit = { git = "https://github.com/adumbidiot/reddit-rs", rev = "d46d78445ca94023aee417fe92bd43e86faf36dc", features = [ "force-rustls-tls" ] }
reddit-tube = { path = "./lib/reddit-tube-rs" }
regex = "1.5.4"
rule34 = { path = "./lib/rule34-rs" }
rusqlite = { version = "0.26.3", features = [ "bundled", "blob", "trace" ] }
serde = { version = "1.0.136", features = [ "derive" ] }
serenity = { version = "0.10.9", features = [ "client", "standard_framework", "voice" ] }
shift-orcz = { git = "https://github.com/adumbidiot/shift-client-rs", rev = "f131491d81042c0858ec781ae1f2ac6cbe7ef68a" } 
songbird = "0.2.0"
systemstat = "0.1.10"
thiserror = "1.0.30"
tic-tac-toe = { path = "lib/tic-tac-toe-rs" }
tiny-skia = { version = "0.6.3", features = [ "std", "simd", "png-format" ], default-features = false }
tokio = { version = "1.16.1", features = [ "rt-multi-thread", "signal", "sync", "time", "parking_lot" ] }
toml = "0.5.8"
tonic = "0.6.2"
tracing = "0.1.29"
tracing-appender = "0.2.0"
tracing-log = "0.1.2"
tracing-opentelemetry = "0.16.0"
tracing-subscriber = { version = "0.3.7", features = [ "env-filter", "fmt", "parking_lot" ] }
ttf-parser = "0.14.0"
uom = "0.31.1"
urban-dictionary = { path = "./lib/urban-dictionary-rs" }
url = "2.2.2"
xkcd = { path = "lib/xkcd-rs" }
zalgo = { git = "https://github.com/adumbidiot/zalgo-rs", rev = "a5e0ce60cb37daee1f4b954c5270c30d1034c4af" }

# Optional
openssl = { version = "0.10.38", optional = true, features = [ "vendored" ] }

[features]
# Note: This is needed for cross comp
use-openssl-vendored = [ "openssl" ]

[patch.crates-io]
# Fix security advisory.
heim = { git = "https://github.com/heim-rs/heim", rev = "b292f1535bb27c03800cdb7509fa81a40859fbbb" }

# `servo_arc` has UB on crates.io. This still has UB, but less and I haven't seen any issues with it yet.
# To fix this, I think https://doc.rust-lang.org/std/mem/fn.size_of_val_raw.html needs to stabilize.
servo_arc = { git = "https://github.com/servo/servo", rev = "490c215798a92aca1468a1767e3cc294f824036c" }

# Fix cross compilation, crates.io songbird does not support it
songbird = { git = "https://github.com/adumbidiot/songbird", branch = "audiopus-0.3.0" }
# songbird requires serenity:next
# serenity = { git = "https://github.com/serenity-rs/serenity", branch = "next" }
# dashmap v5 is unsound
serenity = { git = "https://github.com/adumbidiot/serenity", branch = "next-downgrade-dashmap" }
# cmake crates.io chokes on windows -> linux cross compilation right now
cmake = { git = "https://github.com/alexcrichton/cmake-rs", branch = "master" }

[patch.'https://github.com/serenity-rs/serenity']
# dashmap v5 is unsound
serenity = { git = "https://github.com/adumbidiot/serenity", branch = "next-downgrade-dashmap" }

[workspace]
members = [ 
    "lib/fml-rs",
    "lib/nekos-rs", 
    "lib/quizizz-rs",
    "lib/r6stats-rs", 
    "lib/r6tracker-rs", 
    "lib/reddit-tube-rs",
    "lib/rule34-rs",
    "lib/insta-rs",
    "lib/deviantart-rs",
    "lib/urban-dictionary-rs",
    "lib/xkcd-rs",
    "lib/tiktok-rs",
    "lib/open-graph-rs",
    "lib/iqdb-rs",
    "lib/sauce-nao-rs",
    "lib/tic-tac-toe-rs",
    "lib/async-rusqlite-rs",
    "lib/across-rs",
]

# To make image drawing times sane
[profile.dev.package.tiny-skia]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.png]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.miniz_oxide]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.crc32fast]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.deflate]
opt-level = 3

[profile.release]
lto = true
codegen-units = 1
opt-level = 3

[profile.bench]
lto = true
codegen-units = 1
opt-level = 3
