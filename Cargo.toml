[package]
name = "pikadick"
version = "0.0.0"
edition = "2021"
license = "MIT OR Apache-2.0"
readme = "README.md"
description = "yet another discord bot"
authors = [ "adumbidiot <nathaniel.daniel23@outlook.com>" ]

[dependencies]
anyhow = "1.0.79"
argh = "0.1.12"
async-rusqlite = { path = "./lib/async-rusqlite-rs", features = [ "bundled" ] }
bincode = "1.3.3"
bitflags = "2.4.2"
bytes = "1.5.0"
camino = { version = "1.1.6", features = [ "serde1" ] }
crossbeam = "0.8.4"
dashmap = "5.5.3"
deviantart = { git = "https://github.com/adumbidiot/deviantart-rs", default-features = false, features = [ "rustls-tls" ] }
fml = { path = "./lib/fml-rs", default-features = false, features = [ "rustls-tls" ] }
futures = { version = "0.3.30", features = [ "std" ], default-features = false }
heim = { version = "0.1.0-rc.1", features = [ "cpu", "virt" ] }
indexmap = "2.2.2"
insta = { path = "./lib/insta-rs", default-features = false, features = [ "rustls-tls" ] }
iqdb = { path = "./lib/iqdb-rs", default-features = false, features = [ "rustls-tls" ] }
itoa = "1.0.10"
nd-util = { git = "https://github.com/nathaniel-daniel/nd-util-rs", features = [ "download-to-path", "drop-remove-path", "arc-anyhow-error" ] }
nekos = { path = "./lib/nekos-rs", default-features = false, features = [ "rustls-tls" ] }
once_cell = "1.19.0"
open-ai = { path = "./lib/open-ai-rs", features = [ "rustls-tls" ], default-features = false }
opentelemetry = { version = "0.21.0" }
opentelemetry-otlp = { version = "0.14.0", features = [ "tls", "tls-roots" ] }
opentelemetry_sdk = { version = "0.21.2", features = [ "rt-tokio" ] }
parking_lot = "0.12.1"
pikadick-slash-framework = { path = "./lib/pikadick-slash-framework-rs"}
pikadick-util = { path = "./lib/pikadick-util-rs", features = [ "async_lock_file", "request_map" ] }
pikadick-system-info = { path = "./lib/pikadick-system-info-rs" }
quizizz = { path = "./lib/quizizz-rs", default-features = false, features = [ "rustls-tls" ] }
r6stats = { path = "./lib/r6stats-rs", default-features = false, features = [ "rustls-tls" ] }
r6tracker = { path = "./lib/r6tracker-rs", default-features = false, features = [ "rustls-tls" ] }
rand = "0.8.5"
reddit = { git = "https://github.com/nathaniel-daniel/reddit-rs", features = [ "rustls-tls" ], default-features = false }
reddit-tube = { path = "./lib/reddit-tube-rs", default-features = false, features = [ "rustls-tls" ] }
regex = "1.10.3"
reqwest = { version = "0.11.24", default-features = false }
rule34 = { path = "./lib/rule34-rs", default-features = false, features = [ "rustls-tls" ] }
rusqlite = { version = "0.30.0", features = [ "bundled", "blob", "trace" ] }
ryu = "1.0.16"
sauce-nao = { git = "https://github.com/adumbidiot/sauce-nao-rs", default-features = false, features = [ "rustls-tls" ] }
serde = { version = "1.0.196", features = [ "derive" ] }
serenity = { version = "0.12.1", features = [ "client", "standard_framework", "rustls_backend", "voice", "cache", "unstable_discord_api" ], default-features = false }
shift-orcz = { git = "https://github.com/adumbidiot/shift-client-rs", default-features = false, features = [ "rustls-tls" ] } 
songbird = "0.4.0"
systemstat = "0.2.3"
thiserror = "1.0.56"
tic-tac-toe = { path = "lib/tic-tac-toe-rs" }
tiktok = { git = "https://github.com/adumbidiot/tiktok-rs", default-features = false, features = [ "rustls-tls" ] }
time = "0.3.34"
tiny-skia = { version = "0.11.4", features = [ "std", "simd", "png-format" ], default-features = false }
tokio = { version = "1.36.0", features = [ "rt-multi-thread", "signal", "sync", "time", "parking_lot" ] }
tokio-ffmpeg-cli = { path = "./lib/tokio-ffmpeg-cli-rs" }
tokio-stream = "0.1.14"
toml = "0.8.10"
tonic = { version = "0.9.2", default-features = false }
tracing = "0.1.40"
tracing-appender = "0.2.3"
tracing-log = "0.2.0"
tracing-opentelemetry = "0.22.0"
tracing-subscriber = { version = "0.3.18", features = [ "env-filter", "fmt", "parking_lot" ] }
ttf-parser = "0.20.0"
uom = "0.31.1"
urban-dictionary = { path = "./lib/urban-dictionary-rs", default-features = false, features = [ "rustls-tls" ] }
url = "2.5.0"
xkcd = { path = "lib/xkcd-rs", default-features = false, features = [ "rustls-tls" ] }
yodaspeak = { path = "lib/yodaspeak-rs", default-features = false, features = [ "rustls-tls" ] }
zalgo = { git = "https://github.com/nathaniel-daniel/zalgo-rs", default-features = false }

# Optional
openssl = { version = "0.10.63", optional = true, features = [ "vendored" ] }

[features]
# Note: This is needed for cross comp
use-openssl-vendored = [ "openssl" ]

[lints.clippy]
# Deny
exit = "deny"
macro_use_imports = "deny"

# Warn
borrow_as_ptr = "warn"
case_sensitive_file_extension_comparisons = "warn"
cast_lossless = "warn"
cast_ptr_alignment = "warn"
cloned_instead_of_copied = "warn"
filetype_is_file = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
implicit_clone = "warn"
inefficient_to_string = "warn"
inconsistent_struct_constructor = "warn"
items_after_statements = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
manual_ok_or = "warn"
match_bool = "warn"
match_same_arms = "warn"
mut_mut = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
needless_for_each = "warn"
nonstandard_macro_braces = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_else = "warn"
ref_binding_to_reference = "warn"
ref_option_ref = "warn"
semicolon_if_nothing_returned = "warn"
suboptimal_flops = "warn"
todo = "warn"
transmute_ptr_to_ptr = "warn"
trivially_copy_pass_by_ref = "warn"
try_err = "warn"
type_repetition_in_bounds = "warn"
unicode_not_nfc = "warn"
unnecessary_join = "warn"
unnested_or_patterns = "warn"
zero_sized_map_values = "warn"

# TODO: Consider if we want to deny this
# uninlined_format_args = "warn"

[patch.crates-io]
# Fix security advisory.
# heim = { git = "https://github.com/heim-rs/heim", rev = "b292f1535bb27c03800cdb7509fa81a40859fbbb" }
heim = { git = "https://github.com/vectordotdev/heim", branch = "update-nix" }

# Fix ntapi 0.3.0 not compiling on newer Rust versions
ntapi3 = { version = "0.3.0", git = "https://github.com/MSxDOS/ntapi", rev = "2148881c30e8da6a3ff585efd1c7d8ad125ccd2c", package = "ntapi" }

# To make image drawing times sane
[profile.dev.package.tiny-skia]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.png]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.miniz_oxide]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.crc32fast]
opt-level = 3

# Causes build warning? "profile package spec `deflate` in profile `dev` did not match any packages"
# # To make image encoding times sane
# [profile.dev.package.deflate]
# opt-level = 3

[profile.release]
lto = "fat"
codegen-units = 1
opt-level = 3
strip = "symbols"

[profile.bench]
lto = "fat"
codegen-units = 1
opt-level = 3
strip = "symbols"

# A profile to use `cargo-bloat` with
[profile.release-cargo-bloat]
inherits = "release"
codegen-units = 1
debug = true
opt-level = 3
strip = false

[workspace]
members = [ 
    "lib/*"
]

[package.metadata.deb]
name = "pikadick"
depends = "ffmpeg"
assets = [
    [ "target/release/pikadick", "usr/bin/", "700" ],
    [ "deb-config.toml", "etc/pikadick/config.toml", "600" ],
]
conf-files = [
    "etc/pikadick/config.toml",
]
maintainer-scripts = "debian/"

[package.metadata.deb.systemd-units]
enable = true
start = true

[package.metadata.rpi-deploy]
targets = [
    "aarch64-unknown-linux-gnu",
    "armv7-unknown-linux-gnueabihf",
]
