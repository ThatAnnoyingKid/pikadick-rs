[package]
name = "pikadick"
version = "0.0.0"
edition = "2021"
license = "MIT OR Apache-2.0"
readme = "README.md"
description = "yet another discord bot"
authors = [ "adumbidiot <nathaniel.daniel23@outlook.com>" ]

[dependencies]
anyhow = "1.0.68"
argh = "0.1.10"
async-rusqlite = { path = "./lib/async-rusqlite-rs", features = [ "bundled" ] }
bincode = "1.3.3"
bitflags = "1.3.2"
bytes = "1.4.0"
camino = { version = "1.1.2", features = [ "serde1" ] }
crossbeam = "0.8.2"
dashmap = "5.4.0"
deviantart = { git = "https://github.com/adumbidiot/deviantart-rs", default-features = false, features = [ "rustls-tls" ] }
fml = { path = "./lib/fml-rs", default-features = false, features = [ "rustls-tls" ] }
futures = { version = "0.3.26", features = [ "std" ], default-features = false }
heim = { version = "0.1.0-rc.1", features = [ "cpu", "virt" ] }
indexmap = "1.9.2"
insta = { path = "./lib/insta-rs", default-features = false, features = [ "rustls-tls" ] }
iqdb = { path = "./lib/iqdb-rs", default-features = false, features = [ "rustls-tls" ] }
itoa = "1.0.5"
lazy_static = "1.4.0"
nd-util = { git = "https://github.com/nathaniel-daniel/nd-util-rs", features = [ "download-to-path", "drop-remove-path" ] }
nekos = { path = "./lib/nekos-rs", default-features = false, features = [ "rustls-tls" ] }
once_cell = "1.17.0"
opentelemetry = { version = "0.18.0", features = [ "rt-tokio" ] }
opentelemetry-otlp = { version = "0.11.0", features = [ "tls", "tls-roots" ] }
parking_lot = "0.12.1"
pikadick-slash-framework = { path = "./lib/pikadick-slash-framework-rs"}
pikadick-util = { path = "./lib/pikadick-util-rs", features = [ "arc_anyhow_error", "async_lock_file", "drop_remove_file", "request_map" ] }
pikadick-system-info = { path = "./lib/pikadick-system-info-rs" }
quizizz = { path = "./lib/quizizz-rs", default-features = false, features = [ "rustls-tls" ] }
r6stats = { path = "./lib/r6stats-rs", default-features = false, features = [ "rustls-tls" ] }
r6tracker = { path = "./lib/r6tracker-rs", default-features = false, features = [ "rustls-tls" ] }
rand = "0.8.5"
reddit = { git = "https://github.com/nathaniel-daniel/reddit-rs", features = [ "rustls-tls", "force-rustls-tls" ], default-features = false }
reddit-tube = { path = "./lib/reddit-tube-rs", default-features = false, features = [ "rustls-tls" ] }
regex = "1.7.1"
reqwest = { version = "0.11.14", default-features = false }
rule34 = { path = "./lib/rule34-rs", default-features = false, features = [ "rustls-tls" ] }
rusqlite = { version = "0.28.0", features = [ "bundled", "blob", "trace" ] }
ryu = "1.0.12"
sauce-nao = { git = "https://github.com/adumbidiot/sauce-nao-rs", default-features = false, features = [ "rustls-tls" ] }
serde = { version = "1.0.152", features = [ "derive" ] }
serenity = { version = "0.11.2", features = [ "client", "standard_framework", "voice", "cache" ], default-features = false }
shift-orcz = { git = "https://github.com/adumbidiot/shift-client-rs", default-features = false, features = [ "rustls-tls" ] } 
songbird = "0.2.2"
systemstat = "0.2.2"
thiserror = "1.0.38"
tic-tac-toe = { path = "lib/tic-tac-toe-rs" }
tiktok = { path = "lib/tiktok-rs" }
time = "0.3.17"
tiny-skia = { version = "0.8.2", features = [ "std", "simd", "png-format" ], default-features = false }
tokio = { version = "1.25.0", features = [ "rt-multi-thread", "signal", "sync", "time", "parking_lot" ] }
tokio-ffmpeg-cli = { path = "./lib/tokio-ffmpeg-cli-rs" }
tokio-stream = "0.1.11"
toml = "0.5.10"
tonic = { version = "0.8.3", default-features = false }
tracing = "0.1.37"
tracing-appender = "0.2.2"
tracing-log = "0.1.3"
tracing-opentelemetry = "0.18.0"
tracing-subscriber = { version = "0.3.16", features = [ "env-filter", "fmt", "parking_lot" ] }
ttf-parser = "0.18.1"
twilight-cache-inmemory = "0.13.0"
twilight-gateway = "0.13.0"
twilight-http = "0.13.0"
twilight-model = "0.13.0"
twilight-util = { version = "0.13.0", features = [ "builder" ] }
uom = "0.31.1"
urban-dictionary = { path = "./lib/urban-dictionary-rs", default-features = false, features = [ "rustls-tls" ] }
url = "2.3.1"
xkcd = { path = "lib/xkcd-rs", default-features = false, features = [ "rustls-tls" ] }
zalgo = { git = "https://github.com/nathaniel-daniel/zalgo-rs", default-features = false }

# Optional
openssl = { version = "0.10.45", optional = true, features = [ "vendored" ] }

[features]
# Note: This is needed for cross comp
use-openssl-vendored = [ "openssl" ]

[patch.crates-io]
# Fix security advisory.
# heim = { git = "https://github.com/heim-rs/heim", rev = "b292f1535bb27c03800cdb7509fa81a40859fbbb" }
heim = { git = "https://github.com/vectordotdev/heim", branch = "update-nix" }

# `servo_arc` has UB on crates.io. This still has UB, but less and I haven't seen any issues with it yet.
# To fix this, I think https://doc.rust-lang.org/std/mem/fn.size_of_val_raw.html needs to stabilize.
servo_arc = { git = "https://github.com/servo/servo", rev = "490c215798a92aca1468a1767e3cc294f824036c" }

# Fix cross compilation, crates.io songbird does not support it
# songbird = { git = "https://github.com/adumbidiot/songbird", branch = "audiopus-0.3.0" }
# songbird requires serenity:next
serenity = { git = "https://github.com/adumbidiot/serenity", branch = "next" }
songbird = { git = "https://github.com/FelixMcFelix/songbird", branch = "symphonia" }

# Fix doc gen on stable
opentelemetry-proto = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
opentelemetry-otlp = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
opentelemetry_sdk = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
opentelemetry_api = { git = "https://github.com/open-telemetry/opentelemetry-rust" }
opentelemetry = { git = "https://github.com/open-telemetry/opentelemetry-rust" }

# Fix ntapi 0.3.0 not compiling on newer Rust versions
ntapi3 = { version = "0.3.0", git = "https://github.com/MSxDOS/ntapi", rev = "2148881c30e8da6a3ff585efd1c7d8ad125ccd2c", package = "ntapi" }


# Update scraper and many sub-dependencies
scraper = { git = "https://github.com/causal-agent/scraper" }

# cssparser27 = { git = "https://github.com/servo/rust-cssparser", rev  = "5ce9919680325c35220f4c8762335bc73a15314c", package = "cssparser" } 

[patch.'https://github.com/serenity-rs/serenity']
serenity = { git = "https://github.com/adumbidiot/serenity", branch = "next" }

# To make image drawing times sane
[profile.dev.package.tiny-skia]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.png]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.miniz_oxide]
opt-level = 3

# To make image encoding times sane
[profile.dev.package.crc32fast]
opt-level = 3

# Causes build warning? "profile package spec `deflate` in profile `dev` did not match any packages"
# # To make image encoding times sane
# [profile.dev.package.deflate]
# opt-level = 3

[profile.release]
lto = "fat"
codegen-units = 1
opt-level = 3
strip = "symbols"

[profile.bench]
lto = "fat"
codegen-units = 1
opt-level = 3
strip = "symbols"

# A profile to use `cargo-bloat` with
[profile.release-cargo-bloat]
inherits = "release"
codegen-units = 1
debug = true
opt-level = 3
strip = false

[workspace]
members = [ 
    "lib/*",
]

[package.metadata.deb]
name = "pikadick"
depends = "ffmpeg"
assets = [
    [ "target/release/pikadick", "usr/bin/", "700" ],
    [ "deb-config.toml", "etc/pikadick/config.toml", "600" ],
]
conf-files = [
    "etc/pikadick/config.toml",
]
maintainer-scripts = "debian/"

[package.metadata.deb.systemd-units]
enable = true
start = true

[package.metadata.rpi-deploy]
targets = [ 
    "armv7-unknown-linux-gnueabihf",
    "aarch64-unknown-linux-gnu",
]
