name: Rust
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-lint-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install Protobuf Compiler
        run: sudo apt-get install -y protobuf-compiler
      
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: '--tests --all --all-features -- -D warnings'
        
  # We use nightly options for formatting,
  # so split linting to add freedom to choose toolchains for the rest of the linting steps.       
  lint-rustfmt:
    name: Lint RustFmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-lint-rustfmt-cargo-${{ hashFiles('**/Cargo.lock') }}
        
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true
          
      - name: RustFmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: '-- --check --color always'
          
  Deny:
    name: Deny
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Deny
        uses: EmbarkStudios/cargo-deny-action@v1
        
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-build-cargo-${{ hashFiles('**/Cargo.lock') }}
            
      - name: Run `apt-get update`
        run: sudo apt-get update
        
      - name: Run `apt-get upgrade`
        run: sudo apt-get upgrade -y
            
      - name: Install FFMpeg
        run: sudo apt-get install -y ffmpeg
        
      - name: Install Protobuf Compiler
        run: sudo apt-get install -y protobuf-compiler
        
      - name: Build Pikadick
        run: cargo build --verbose
        
      - name: Build All
        run: cargo build --verbose --all --all-features
        
      - name: Run Tests
        run: cargo test --all --verbose
        
      - name: Build Docs
        run: cargo doc --verbose --all
